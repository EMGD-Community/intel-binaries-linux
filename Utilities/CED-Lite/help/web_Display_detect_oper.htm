<!--******************************************************************************
 * Copyright 2012 Intel Corporation All Rights Reserved.
 *
 * The source code, information and material ("Material") contained herein is
 * owned by Intel Corporation or its suppliers or licensors, and title to such
 * Material remains with Intel Corporation or its suppliers or licensors. The 
 * Material contains proprietary information of Intel or its suppliers and 
 * licensors. The Material is protected by worldwide copyright laws and treaty 
 * provisions. No part of the Material may be used, copied, reproduced, modified,
 * published, uploaded, posted, transmitted, distributed or disclosed in any way 
 * without Intel's prior express written permission. No license under any patent,
 * copyright or other intellectual property rights in the Material is granted to 
 * or conferred upon you, either expressly, by implication, inducement, estoppel 
 * or otherwise. Any license under such intellectual property rights must be 
 * express and approved by Intel in writing.
 *
 * Unless otherwise agreed by Intel in writing, you may not remove or alter this
 * notice or any other notice embedded in Materials by Intel or Intel's suppliers 
 * or licensors in any way.
 *
 ********************************************************************************-->
<a href="http://www.intel.com/index.htm?iid=homepage+hdr_logo"><img src="hdr-txt-logo.gif" class="header-image-logo" width="134" height="111" border="0" align="right" alt="Intel.(TM) Embedded." /></a><br><br><br><br>
<!DOCTYPE html PUBLIC 
"-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- generated by DCL filter dwhtm, Ver 4.0 m207i h290o -->
<head><link rel="stylesheet" href="local.css" type="text/css">
<title>web_Display_detect_oper</title>
<meta http-equiv="Content-type" content="text/html; charset=ISO-8859-1">
</head>
<body><p class="x02level"><a
 name="Xaa1018933"></a><a
 name="Xaa1018929"></a><a
 name="Xaa1018930"></a><a
 name="Xaa1018931"></a><a
 name="Raa73612"></a><b>Display Detect Operation</b></p>
<p class="body"><a
 name="Xaa1018934"></a>This section describes the logic of the Display
Detection feature and provides several examples.</p>
<p class="step1"><a
 name="Xaa1018935"></a> 1. If Display Detect is disabled, the driver uses
the first two ports identified in the PortOrder.</p>
<p class="stepn"><a
 name="Xaa1018939"></a> 2. If Display Detect is enabled and you are using
the 1.6<a
 name="Xaa1018937"></a> version of the VBIOS, the VBIOS performs the display
detection. The driver then checks whether the VBIOS returns the display
allocations and if it does, the driver does not re-execute the display
detection steps. </p>
<p class="bulletpara"><a
 name="Xaa1018943"></a>If you are not using the EMGD-developed VBIOS, then
the driver performs display discovery as described in the following steps.</p>
<p class="stepn"><a
 name="XPGaa38"></a><a
 name="Xaa1018944"></a> 3. The number of displays to be detected is based
on the <span class="code">DisplayConfig</span> settings in the configuration.
If this is set to <span class="bold"><b>Single</b></span>, then only
one display is detected. If it is set to any other value, a maximum of
two displays will be detected.</p>
<p class="stepn"><a
 name="Xaa1018948"></a> 4. The Intel<span class="superscript"><sup>&#174;</sup></span>
EMGD<a
 name="Xaa1018946"></a> goes through each port in the <span class="code">PortOrder</span>
settings and attempts to detect a display using the following algorithm:</p>
<p class="substepa"><a
 name="Xaa1018949"></a>a. PortOrder sequence determines display detection.
Port allocation shows after the display has been detected. For example:</p>
<p class="bulletsubpara"><a
 name="Xaa1018950"></a>PortOrder = &#8220;42000&#8221; (LVDS, SDVO)</p>
<p class="bulletsubpara"><a
 name="Xaa1018951"></a>Displays Connected = LVDS</p>
<p class="bulletsubpara"><a
 name="Xaa1018952"></a><span class="bold"><b>Primary display allocation</b></span>:
Searches for a display connected according to the PortOrder sequence.
The first detected display is an LVDS, so the Primary display is &#8220;LVDS.&#8221;</p>
<p class="bulletsubpara"><a
 name="Xaa1018953"></a><span class="bold"><b>Secondary display allocation</b></span>:
Searches for a display connected according to the PortOrder sequence.
The first non-allocated display detected is SDVO, so the Secondary display
is &#8220;SDVO.&#8221;</p>
<p class="substepn"><a
 name="Xaa1018954"></a>b. With no display detected on any port, then turn
off the DisplayDetect option and allocate ports in the order defined
by PortOrder. For example:</p>
<p class="bulletsubpara"><a
 name="Xaa1018955"></a>PortOrder = &#8220;20000&#8221;</p>
<p class="bulletsubpara"><a
 name="Xaa1018956"></a>Displays Connected = None</p>
<p class="bulletsubpara"><a
 name="Xaa1018957"></a><span class="bold"><b>Primary display allocation</b></span>:
Searches for a connected display according to the PortOrder. Because
Intel<span class="superscript"><sup>&#174;</sup></span> EMGD<a
 name="Xaa1018959"></a> detects no displays, the Primary display is set
to &#8220;SDVO<nobr>-</nobr>B.&#8221;</p>
<p class="substepn"><a
 name="Xaa1018961"></a>c. The driver cannot detect the presence of a display
connected to the Internal LVDS and external LVDS displays connected to
some SDVO devices, for example, an LVDS connected to the CH7308. Consequently,
the driver assumes that an LVDS display is connected if it is in the
PortOrder. If you only want to use the internal LVDS when no external
panel (from SDVO) or devices are connected, then put LVDS in the PortOrder
after them. For example:</p>
<p class="bulletsubpara"><a
 name="Xaa1018962"></a>PortOrder = &#8220;24000&#8221; (SDVOB, LVDS)</p>
<p class="bulletsubpara"><a
 name="Xaa1018963"></a>Display Connected = None</p>
<p class="bulletsubpara"><a
 name="Xaa1018964"></a><span class="bold"><b>Primary display allocation</b></span>:
Searches for a display connected according to PortOrder sequence. Since
no display is connected and since LVDS is specified in the PortOrder,
the driver assumes that an LVDS display is connected. Consequently, set
the Primary display to &#8220;LVDS.&#8221;</p>
<p class="substepn"><a
 name="Xaa1018970"></a>d. <span class="v61"><chbar>When the port drivers
do not load for any ports specified in the PortOrder, the driver enables
port 4 (LVDS) only. For example:</chbar></span></p>
<p class="bulletsubpara"><a
 name="Xaa1018971"></a><span class="v61"><chbar>PortOrder = &#8220;20000&#8221;
(</chbar></span>SDVO<span class="v61"><chbar>)</chbar></span></p>
<p class="bulletsubpara"><a
 name="Xaa1018972"></a><span class="v61"><chbar>PortDrivers = &#8220;&#8221;
(None)</chbar></span></p>
<p class="bulletsubpara"><a
 name="Xaa1018973"></a><span class="bold"><b>Primary display allocation:</b></span>
Searches for displays connected according to the PortOrder. Since no
port drivers are available for the specified ports, LVDS port 4 is enabled.
Consequently, set the Primary display to &#8220;LVDS.&#8221;</p>

<FONT FACE="Verdana"; FONT SIZE=1><br><HR><br>*Other names and brands may be claimed as the property of others.<br>Revised June 20, 2011<br></FONT>

</body><!-- Split file for ID 1018978 here -->
</html>
